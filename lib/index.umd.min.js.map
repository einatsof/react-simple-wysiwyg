{"version":3,"file":"index.umd.min.js","sources":["../src/utils.ts","../src/editor/ContentEditable.tsx","../src/editor/EditorContext.tsx","../src/editor/HtmlEditor.tsx","../src/editor/Editor.tsx","../src/toolbar/buttons.tsx","../src/toolbar/icons/UnorderedListIcon.tsx","../src/toolbar/icons/OrderedListIcon.tsx","../src/toolbar/dropdowns.tsx","../src/toolbar/HtmlButton.tsx","../src/toolbar/Separator.tsx","../src/toolbar/Toolbar.tsx","../src/editor/DefaultEditor.tsx"],"sourcesContent":["export function getSelectedNode(): Node {\r\n  if ((document as any).selection) {\r\n    return (document as any).selection.createRange().parentElement();\r\n  }\r\n\r\n  const selection = window.getSelection();\r\n  if (selection.rangeCount > 0) {\r\n    return selection.getRangeAt(0).startContainer.parentNode;\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport function normalizeHtml(str: string): string {\r\n  return str && str.replace(/&nbsp;|\\u202F|\\u00A0/g, ' ');\r\n}\r\n\r\nexport function replaceCaret(el: HTMLElement) {\r\n  // Place the caret at the end of the element\r\n  const target = document.createTextNode('');\r\n  el.appendChild(target);\r\n\r\n  // do not move caret if element was not focused\r\n  const isTargetFocused = document.activeElement === el;\r\n  if (target !== null && target.nodeValue !== null && isTargetFocused) {\r\n    const sel = window.getSelection();\r\n    if (sel !== null) {\r\n      const range = document.createRange();\r\n      range.setStart(target, target.nodeValue.length);\r\n      range.collapse(true);\r\n      sel.removeAllRanges();\r\n      sel.addRange(range);\r\n    }\r\n    if (el instanceof HTMLElement) el.focus();\r\n  }\r\n}\r\n","/* eslint-disable react/prop-types */\r\n\r\nimport * as React from 'react';\r\nimport { normalizeHtml, replaceCaret } from '../utils';\r\n\r\n/**\r\n * Based on https://github.com/lovasoa/react-contenteditable\r\n * A simple component for a html element with editable contents.\r\n */\r\nexport const ContentEditable = React.memo(\r\n  React.forwardRef(function ContentEditable(\r\n    { className, disabled, tagName, value, ...rest }: ContentEditableProps,\r\n    ref: React.ForwardedRef<HTMLElement>,\r\n  ) {\r\n    const elRef = React.useRef<HTMLElement>();\r\n    const htmlRef = React.useRef(value);\r\n    const restRef = React.useRef(rest);\r\n\r\n    React.useEffect(() => {\r\n      restRef.current = rest;\r\n      const el = elRef.current;\r\n      if (el && normalizeHtml(htmlRef.current) !== normalizeHtml(value)) {\r\n        htmlRef.current = value;\r\n        el.innerHTML = value;\r\n        replaceCaret(el);\r\n      }\r\n    });\r\n\r\n    return React.useMemo(() => {\r\n      function onSetRef($el: HTMLElement) {\r\n        elRef.current = $el;\r\n        if (typeof ref === 'function') {\r\n          ref($el);\r\n        } else if (typeof ref === 'object') {\r\n          // eslint-disable-next-line no-param-reassign\r\n          ref.current = $el;\r\n        }\r\n      }\r\n\r\n      function onChange(event: React.SyntheticEvent<any>) {\r\n        const el = elRef.current;\r\n        if (!el) {\r\n          return;\r\n        }\r\n\r\n        const elementHtml = el.innerHTML;\r\n        if (elementHtml !== htmlRef.current) {\r\n          restRef.current.onChange?.({\r\n            ...event,\r\n            target: {\r\n              value: elementHtml,\r\n              name: rest.name,\r\n            } as any,\r\n          });\r\n        }\r\n\r\n        htmlRef.current = elementHtml;\r\n      }\r\n\r\n      return React.createElement(tagName || 'div', {\r\n        ...rest,\r\n        className,\r\n        contentEditable: !disabled,\r\n        dangerouslySetInnerHTML: { __html: value },\r\n        onBlur: (e) => (restRef.current.onBlur || onChange)(e),\r\n        onInput: onChange,\r\n        onKeyDown: (e) => (restRef.current.onKeyDown || onChange)(e),\r\n        onKeyUp: (e) => (restRef.current.onKeyUp || onChange)(e),\r\n        ref: onSetRef,\r\n      });\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [className, disabled, tagName]);\r\n  }),\r\n);\r\n\r\nexport type ContentEditableEvent = React.SyntheticEvent<any, Event> & {\r\n  target: { name?: string; value: string };\r\n};\r\n\r\nexport interface ContentEditableProps\r\n  extends React.HTMLAttributes<HTMLElement> {\r\n  disabled?: boolean;\r\n  contentEditableRef?: (el: HTMLElement) => void;\r\n  name?: string;\r\n  onChange?: (event: ContentEditableEvent) => void;\r\n  tagName?: string;\r\n  value?: string;\r\n}\r\n","import * as React from 'react';\r\n\r\nexport const EditorContext = React.createContext<EditorState>(null);\r\n\r\nexport function EditorProvider({ children }: { children: React.ReactNode }) {\r\n  const [state, setState] = React.useState<EditorState>({\r\n    htmlMode: false,\r\n    update,\r\n  });\r\n\r\n  function update(attrs) {\r\n    setState((prevState) => {\r\n      return {\r\n        ...prevState,\r\n        ...attrs,\r\n        date: Date.now(),\r\n      };\r\n    });\r\n  }\r\n\r\n  return (\r\n    <EditorContext.Provider value={state}>{children}</EditorContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useEditorState(): EditorState {\r\n  const context = React.useContext(EditorContext);\r\n  if (!context) {\r\n    throw new Error('You should wrap your component by EditorProvider');\r\n  }\r\n\r\n  return context;\r\n}\r\n\r\nexport interface EditorState {\r\n  update(attrs: Partial<EditorState>): void;\r\n  $el?: HTMLElement;\r\n  $selection?: Node;\r\n  htmlMode: boolean;\r\n}\r\n","import * as React from 'react';\r\n\r\nexport function HtmlEditor({ ...rest }) {\r\n  return <textarea {...rest} />;\r\n}\r\n","import * as React from 'react';\r\nimport { getSelectedNode } from '../utils';\r\nimport { ContentEditable, ContentEditableProps } from './ContentEditable';\r\nimport { useEditorState } from './EditorContext';\r\nimport { HtmlEditor } from './HtmlEditor';\r\nimport '../styles.css';\r\n\r\nexport function Editor({ children, onSelect, ...rest }: EditorProps) {\r\n  const editorState = useEditorState();\r\n\r\n  React.useEffect(() => {\r\n    document.addEventListener('click', onClickOutside);\r\n    return () => document.removeEventListener('click', onClickOutside);\r\n  });\r\n\r\n  function onClickOutside(event: MouseEvent) {\r\n    if (event.target === editorState.$el) {\r\n      return;\r\n    }\r\n\r\n    if (editorState.$el?.contains(event.target as HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    editorState.update({ $selection: null });\r\n  }\r\n\r\n  function onTextSelect(event: React.SyntheticEvent<HTMLElement>) {\r\n    onSelect?.(event);\r\n    editorState.update({ $selection: getSelectedNode() });\r\n  }\r\n\r\n  function setContentEditableRef($el: HTMLElement) {\r\n    editorState.update({ $el });\r\n  }\r\n\r\n  if (editorState.htmlMode) {\r\n    return (\r\n      <div className=\"rsw-editor\">\r\n        {children}\r\n        <HtmlEditor {...rest} className=\"rsw-ce rsw-html\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"rsw-editor\">\r\n      {children}\r\n      <ContentEditable\r\n        {...rest}\r\n        ref={setContentEditableRef}\r\n        onSelect={onTextSelect}\r\n        className=\"rsw-ce\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\nexport interface EditorProps extends ContentEditableProps {}\r\n","import * as React from 'react';\r\nimport type { HTMLAttributes, ReactNode } from 'react';\r\nimport { EditorState, useEditorState } from '../editor/EditorContext';\r\nimport OrderedListIcon from './icons/OrderedListIcon';\r\nimport UnorderedListIcon from './icons/UnorderedListIcon';\r\n\r\nexport const BtnBold = createButton('Bold', 'ùêÅ', 'bold');\r\n\r\nexport const BtnBulletList = createButton(\r\n  'Bullet list',\r\n  <UnorderedListIcon />,\r\n  'insertUnorderedList',\r\n);\r\n\r\nexport const BtnClearFormatting = createButton(\r\n  'Clear formatting',\r\n  'TÃ≤‚Çì',\r\n  'removeFormat',\r\n);\r\n\r\nexport const BtnItalic = createButton('Italic', 'ùë∞', 'italic');\r\n\r\nexport const BtnLink = createButton('Link', 'üîó', ({ $selection }) => {\r\n  if ($selection?.nodeName === 'A') {\r\n    document.execCommand('unlink');\r\n  } else {\r\n    // eslint-disable-next-line no-alert\r\n    document.execCommand('createLink', false, prompt('URL', ''));\r\n  }\r\n});\r\n\r\nexport const BtnNumberedList = createButton(\r\n  'Numbered list',\r\n  <OrderedListIcon />,\r\n  'insertOrderedList',\r\n);\r\n\r\nexport const BtnRedo = createButton('Redo', '‚Ü∑', 'redo');\r\n\r\nexport const BtnUnderline = createButton(\r\n  'Underline',\r\n  <span style={{ textDecoration: 'underline' }}>ùêî</span>,\r\n  'underline',\r\n);\r\n\r\nexport const BtnUndo = createButton('Undo', '‚Ü∂', 'undo');\r\n\r\nfunction createButton(\r\n  title: string,\r\n  content: ReactNode,\r\n  command: ((state: EditorState) => void) | string,\r\n) {\r\n  ButtonFactory.displayName = title.replace(/\\s/g, '');\r\n\r\n  return ButtonFactory;\r\n\r\n  function ButtonFactory(props: HTMLAttributes<HTMLButtonElement>) {\r\n    const editorState = useEditorState();\r\n    const { $selection } = editorState;\r\n\r\n    let active = false;\r\n    if (typeof command === 'string') {\r\n      active = !!$selection && document.queryCommandState(command);\r\n    }\r\n\r\n    function onAction(e: React.MouseEvent<HTMLButtonElement>) {\r\n      e.preventDefault();\r\n      if (typeof command === 'function') {\r\n        command(editorState);\r\n      } else {\r\n        document.execCommand(command);\r\n      }\r\n    }\r\n\r\n    if (editorState.htmlMode) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        title={title}\r\n        {...props}\r\n        className=\"rsw-btn\"\r\n        onMouseDown={onAction}\r\n        data-active={active}\r\n      >\r\n        {content}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function UnorderedListIcon() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 24 24\"\r\n      style={{ verticalAlign: 'text-top' }}\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M7 5h14v2H7V5zm0 8v-2h14v2H7zM4 4.50001c.83 0 1.5.66992 1.5 1.5 0 .83007-.67 1.5-1.5 1.5s-1.5-.66993-1.5-1.5c0-.83008.67-1.5 1.5-1.5zM4 10.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5-1.5-.67-1.5-1.5.67-1.5 1.5-1.5zM7 19v-2h14v2H7zm-3-2.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5-1.5-.67-1.5-1.5.67-1.5 1.5-1.5z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import * as React from 'react';\r\n\r\nexport default function OrderedListIcon() {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"20\"\r\n      height=\"20\"\r\n      viewBox=\"0 0 24 24\"\r\n      style={{ verticalAlign: 'text-top' }}\r\n    >\r\n      <path\r\n        fill=\"currentColor\"\r\n        d=\"M6.99938 12.998v-2H20.9994v2H6.99938zm0 6.0001v-2H20.9994v2H6.99938zm0-12.00001v-2H20.9994v2H6.99938zm-4 1v-3h-1v-1h2v4h-1zm-1 9.00001v-1h3v4h-3v-1h2v-.5h-1v-1h1v-.5h-2zM4.25 10c.41421 0 .75.3358.75.75 0 .2024-.08017.3861-.2105.521L3.11983 13H5v1H2v-.9218L4 11H2v-1h2.25z\"\r\n      />\r\n    </svg>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport type { ChangeEvent, HTMLAttributes } from 'react';\r\nimport { EditorState, useEditorState } from '../editor/EditorContext';\r\n\r\nexport const BtnStyles = createDropdown('Styles', [\r\n  ['Normal', 'formatBlock', 'DIV'],\r\n  // ['ùóõùó≤ùóÆùó±ùó≤ùóø ùü≠', 'formatBlock', 'H1'],\r\n  // ['Header 2', 'formatBlock', 'H2'],\r\n  ['Heading', 'formatBlock', 'H2'],\r\n  ['Subheading', 'formatBlock', 'H4'],\r\n  ['ùô≤ùöòùöçùöé', 'formatBlock', 'PRE'],\r\n]);\r\n\r\nfunction createDropdown(title: string, items: DropDownItem[]): typeof Dropdown {\r\n  DropdownFactory.displayName = title;\r\n\r\n  return DropdownFactory;\r\n\r\n  function DropdownFactory(props: DropdownProps) {\r\n    const editorState = useEditorState();\r\n\r\n    if (editorState.htmlMode) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Dropdown {...props} onChange={onChange} title={title} items={items} />\r\n    );\r\n\r\n    function onChange(e: ChangeEvent<HTMLSelectElement>) {\r\n      const selected = parseInt(e.target.value, 10);\r\n      const [, command, commandArgument] = items[selected];\r\n\r\n      e.preventDefault();\r\n      e.target.selectedIndex = 0;\r\n\r\n      if (typeof command === 'function') {\r\n        command(editorState);\r\n      } else {\r\n        document.execCommand(command, false, commandArgument);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function Dropdown({ items, selected, ...inputProps }: DropdownProps) {\r\n  return (\r\n    <select {...inputProps} value={selected} className=\"rsw-dd\">\r\n      <option hidden>{inputProps.title}</option>\r\n      {items.map((item, index) => (\r\n        <option key={item[2]} value={index}>\r\n          {item[0]}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  );\r\n}\r\n\r\nexport type DropDownItem = [\r\n  string,\r\n  string | ((editorState: EditorState) => void),\r\n  string,\r\n];\r\n\r\nexport interface DropdownProps extends HTMLAttributes<HTMLSelectElement> {\r\n  selected?: number;\r\n  items?: DropDownItem[];\r\n}\r\n","import * as React from 'react';\r\nimport { useEditorState } from '../editor/EditorContext';\r\n\r\nexport function HtmlButton({ ...rest }) {\r\n  const editorState = useEditorState();\r\n\r\n  function onClick() {\r\n    editorState.update({\r\n      htmlMode: !editorState.htmlMode,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      title=\"HTML mode\"\r\n      className=\"rsw-btn\"\r\n      onClick={onClick}\r\n      data-active={editorState.htmlMode}\r\n      {...rest}\r\n    >\r\n      &lt;/&gt;\r\n    </button>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport { useEditorState } from '../editor/EditorContext';\r\n\r\nexport function Separator() {\r\n  const editorState = useEditorState();\r\n\r\n  if (editorState.htmlMode) {\r\n    return null;\r\n  }\r\n\r\n  return <div className=\"rsw-separator\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { HTMLAttributes } from 'react';\r\n\r\nexport function Toolbar(props: HTMLAttributes<HTMLDivElement>) {\r\n  return <div {...props} className=\"rsw-toolbar\" />;\r\n}\r\n","import * as React from 'react';\r\nimport { Editor, EditorProps } from './Editor';\r\nimport { EditorProvider } from './EditorContext';\r\nimport {\r\n  BtnBold,\r\n  BtnBulletList,\r\n  BtnClearFormatting,\r\n  BtnItalic,\r\n  BtnLink,\r\n  BtnNumberedList,\r\n  BtnRedo,\r\n  BtnStyles,\r\n  BtnUnderline,\r\n  BtnUndo,\r\n  HtmlButton,\r\n  Separator,\r\n  Toolbar,\r\n} from '../toolbar';\r\n\r\nexport function DefaultEditor(props: EditorProps) {\r\n  return (\r\n    <EditorProvider>\r\n      <Editor {...props}>\r\n        <Toolbar>\r\n          <BtnUndo />\r\n          <BtnRedo />\r\n          <Separator />\r\n          <BtnBold />\r\n          <BtnItalic />\r\n          <BtnUnderline />\r\n          <Separator />\r\n          <BtnNumberedList />\r\n          <BtnBulletList />\r\n          <Separator />\r\n          <BtnLink />\r\n          <BtnClearFormatting />\r\n          <HtmlButton />\r\n          <Separator />\r\n          <BtnStyles />\r\n        </Toolbar>\r\n      </Editor>\r\n    </EditorProvider>\r\n  );\r\n}\r\n"],"names":["getSelectedNode","document","selection","createRange","parentElement","window","getSelection","rangeCount","getRangeAt","startContainer","parentNode","normalizeHtml","str","replace","ContentEditable","React","memo","forwardRef","_a","ref","className","disabled","tagName","value","rest","__rest","elRef","useRef","htmlRef","restRef","useEffect","current","el","innerHTML","target","createTextNode","appendChild","isTargetFocused","activeElement","nodeValue","sel","range","setStart","length","collapse","removeAllRanges","addRange","HTMLElement","focus","replaceCaret","useMemo","onChange","event","elementHtml","_b","call","__assign","name","createElement","contentEditable","dangerouslySetInnerHTML","__html","onBlur","e","onInput","onKeyDown","onKeyUp","$el","EditorContext","createContext","EditorProvider","children","useState","htmlMode","update","attrs","setState","prevState","date","Date","now","state","Provider","useEditorState","context","useContext","Error","HtmlEditor","Editor","onSelect","editorState","onClickOutside","contains","$selection","addEventListener","removeEventListener","BtnBold","createButton","BtnBulletList","xmlns","width","height","viewBox","style","verticalAlign","fill","d","BtnClearFormatting","BtnItalic","BtnLink","nodeName","execCommand","prompt","BtnNumberedList","BtnRedo","BtnUnderline","textDecoration","BtnUndo","title","content","command","ButtonFactory","displayName","props","active","queryCommandState","type","onMouseDown","preventDefault","BtnStyles","items","DropdownFactory","Dropdown","selected","parseInt","commandArgument","selectedIndex","createDropdown","inputProps","hidden","map","item","index","key","HtmlButton","onClick","Separator","Toolbar"],"mappings":"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"}